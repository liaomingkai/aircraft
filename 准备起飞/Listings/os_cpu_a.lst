


ARM Macro Assembler    Page 1 


    1 00000000                 IMPORT           OSRunning   ; External referenc
                                                            es
    2 00000000                 IMPORT           OSPrioCur
    3 00000000                 IMPORT           OSPrioHighRdy
    4 00000000                 IMPORT           OSTCBCur
    5 00000000                 IMPORT           OSTCBHighRdy
    6 00000000                 IMPORT           OSIntNesting
    7 00000000                 IMPORT           OSIntExit
    8 00000000                 IMPORT           OSTaskSwHook
    9 00000000         
   10 00000000                 EXPORT           OSStartHighRdy
   11 00000000                 EXPORT           OSCtxSw
   12 00000000                 EXPORT           OSIntCtxSw
   13 00000000                 EXPORT           OS_CPU_SR_Save ; Functions decl
                                                            ared in this file
   14 00000000                 EXPORT           OS_CPU_SR_Restore
   15 00000000                 EXPORT           PendSV_Handler
   16 00000000         
   17 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04  ; ÖÐ¶Ï¿ØÖÆ¼Ä´æÆ÷
   18 00000000 E000ED22 
                       NVIC_SYSPRI2
                               EQU              0xE000ED22  ; ÏµÍ³ÓÅÏÈ¼¶¼Ä´æÆ÷(
                                                            2)
   19 00000000 000000F0 
                       NVIC_PENDSV_PRI
                               EQU              0xF0        ; PendSVÖÐ¶ÏºÍÏµÍ³½
                                                            ÚÅÄÖÐ¶Ï
   20 00000000         ; (¶¼Îª×îµÍ£¬0xff).
   21 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000  ; ´¥·¢Èí¼þÖÐ¶ÏµÄÖµ.
                                                            
   22 00000000         
   23 00000000                 PRESERVE8
   24 00000000         
   25 00000000                 AREA             My_Text, CODE, READONLY
   26 00000000                 THUMB
   27 00000000         OS_CPU_SR_Save                       ;¹ØÖÐ¶Ï
   28 00000000 F3EF 8010       MRS              R0, PRIMASK ;¶ÁÈ¡PRIMASKµ½R0,R0
                                                            Îª·µ»ØÖµ 
   29 00000004 B672            CPSID            I           ;PRIMASK=1,¹ØÖÐ¶Ï(N
                                                            MIºÍÓ²¼þFAULT¿ÉÒÔÏì
                                                            Ó¦)
   30 00000006 4770            BX               LR          ;·µ»Ø
   31 00000008         
   32 00000008         
   33 00000008         OS_CPU_SR_Restore                    ;¿ªÖÐ¶Ï
   34 00000008 F380 8810       MSR              PRIMASK, R0 ;¶ÁÈ¡R0µ½PRIMASKÖÐ,
                                                            R0Îª²ÎÊý
   35 0000000C 4770            BX               LR          ;·µ»Ø
   36 0000000E         
   37 0000000E         
   38 0000000E         ;* ¹¦ÄÜÃèÊö: Ê¹ÓÃµ÷¶ÈÆ÷ÔËÐÐµÚÒ»¸öÈÎÎñ
   39 0000000E         OSStartHighRdy
   40 0000000E 4C26            LDR              R4, =NVIC_SYSPRI2 
                                                            ;ÉèÖÃPendSVµÄÓÅÏÈ¼¶
                                                            



ARM Macro Assembler    Page 2 


   41 00000010 F04F 05F0       LDR              R5, =NVIC_PENDSV_PRI
   42 00000014 6025            STR              R5, [R4]
   43 00000016 F04F 0400       MOV              R4, #0      ;R4 = 0 £¬ÉèÖÃPSP =
                                                             0
   44 0000001A F384 8809       MSR              PSP, R4
   45 0000001E 4C23            LDR              R4, =OSRunning ; OSRunning = TR
                                                            UE£¨1£©
   46 00000020 F04F 0501       MOV              R5, #1
   47 00000024 7025            STRB             R5, [R4]
   48 00000026         ;ÇÐ»»µ½×î¸ßÓÅÏÈ¼¶µÄÈÎÎñ
   49 00000026 4C22            LDR              R4, =NVIC_INT_CTRL ;´¥·¢PendSVÒ
                                                            ì³£ (causes context
                                                             switch)
   50 00000028 F04F 5580       LDR              R5, =NVIC_PENDSVSET
   51 0000002C 6025            STR              R5, [R4]
   52 0000002E B662            CPSIE            I           ;¿ªÖÐ¶Ï
   53 00000030         
   54 00000030         OSStartHang
   55 00000030 E7FE            B                OSStartHang ;ËÀÑ­»·£¬Èç¹û¶àÈÎÎñ
                                                            ¿ªÆôÊ§°ÜµÄ»°¾Í»á½øÈ
                                                            ëOSStartHang
   56 00000032         
   57 00000032         ;* ¹¦ÄÜÃèÊö: ÈÎÎñ¼¶ÉÏÏÂÎÄÇÐ»»     
   58 00000032         OSCtxSw
   59 00000032 B430            PUSH             {R4, R5}
   60 00000034 4C1E            LDR              R4, =NVIC_INT_CTRL ;´¥·¢PendSVÒ
                                                            ì³£ (causes context
                                                             switch)
   61 00000036 F04F 5580       LDR              R5, =NVIC_PENDSVSET
   62 0000003A 6025            STR              R5, [R4]
   63 0000003C BC30            POP              {R4, R5}
   64 0000003E 4770            BX               LR
   65 00000040         
   66 00000040         ;* ¹¦ÄÜÃèÊö: ÖÐ¶Ï¼¶ÈÎÎñÇÐ»»
   67 00000040         OSIntCtxSw
   68 00000040 B430            PUSH             {R4, R5}
   69 00000042 4C1B            LDR              R4, =NVIC_INT_CTRL ;´¥·¢PendSVÒ
                                                            ì³£ (causes context
                                                             switch)
   70 00000044 F04F 5580       LDR              R5, =NVIC_PENDSVSET
   71 00000048 6025            STR              R5, [R4]
   72 0000004A BC30            POP              {R4, R5}
   73 0000004C 4770            BX               LR
   74 0000004E BF00            NOP
   75 00000050         
   76 00000050         ;* ¹¦ÄÜÃèÊö: OSPendSV is used to cause a context switch.
                       
   77 00000050         PendSV_Handler
   78 00000050 B672            CPSID            I           ; ¹ØÖÐ¶Ï
   79 00000052 F3EF 8009       MRS              R0, PSP     ;R0 = PSP¶ÑÕ»Ö¸Õë 
   80 00000056 B150            CBZ              R0, PendSV_Handler_Nosave ;Èç¹û
                                                            PSP = 0(ËµÃ÷ÎªµÚÒ»´
                                                            Î×öÈÎÎñÇÐ»»£¬²»ÐèÒª
                                                            ÈëÕ»´¦Àí) ¾Í×ªÒÆµ½P
                                                            endSV_Handler_Nosav
                                                            e
   81 00000058 F01E 0F10       TST              R14, #0x10
   82 0000005C BF08            IT               EQ          ;ÕâÈý²½ÊÇÔÚ²âÊÔEXC_
                                                            RETURNµÄbit4£¬ÓÃÀ´Å



ARM Macro Assembler    Page 3 


                                                            Ð¶ÏÊÇ·ñÓÃFPU£¬´Ó¶ø¾
                                                            ö¶¨ÊÇ·ñÈëÕ»S16-S31
   83 0000005E ED20 8A10       VSTMDBEQ         R0!, {S16-S31}
   84 00000062 3820            SUBS             R0, R0, #0x20 
                                                            ; ±£´æÊ£ÓàµÄR4-R11
   85 00000064 E880 0FF0       STM              R0, {R4-R11}
   86 00000068 4912            LDR              R1, =OSTCBCur ; OSTCBCur->OSTCB
                                                            StkPtr = SP;
   87 0000006A 6809            LDR              R1, [R1]
   88 0000006C 6008            STR              R0, [R1]    ; R0 is SP of proce
                                                            ss being switched o
                                                            ut
   89 0000006E         
   90 0000006E         PendSV_Handler_Nosave
   91 0000006E B500            PUSH             {R14}       ; ±£´æR14µÄÖµ£¬ºóÃæ
                                                            Òªµ÷ÓÃº¯Êý
   92 00000070 4811            LDR              R0, =OSTaskSwHook 
                                                            ; OSTaskSwHook();
   93 00000072 4780            BLX              R0
   94 00000074 F85D EB04       POP              {R14}       ;»Ö¸´R14µÄÖµ
   95 00000078 4810            LDR              R0, =OSPrioCur ; OSPrioCur = OS
                                                            PrioHighRdy;
   96 0000007A 4911            LDR              R1, =OSPrioHighRdy
   97 0000007C 780A            LDRB             R2, [R1]
   98 0000007E 7002            STRB             R2, [R0]
   99 00000080 480C            LDR              R0, =OSTCBCur ; OSTCBCur  = OST
                                                            CBHighRdy£¬Ö¸Ïòµ±Ç°
                                                            ÓÅÏÈ¼¶×î¸ßÈÎÎñ
  100 00000082 4910            LDR              R1, =OSTCBHighRdy
  101 00000084 680A            LDR              R2, [R1]
  102 00000086 6002            STR              R2, [R0]
  103 00000088 6810            LDR              R0, [R2]    ; R0 is new process
                                                             SP; SP = OSTCBHigh
                                                            Rdy->OSTCBStkPtr;
  104 0000008A E890 0FF0       LDM              R0, {R4-R11} ; Restore r4-11 fr
                                                            om new process stac
                                                            k
  105 0000008E 3020            ADDS             R0, R0, #0x20
  106 00000090         ;Is the task using the FPU context? If so, push high vfp
                        registers.
  107 00000090 F01E 0F10       TST              R14, #0x10
  108 00000094 BF08            IT               EQ
  109 00000096 ECB0 8A10       VLDMIAEQ         R0!, {S16-S31}
  110 0000009A F380 8809       MSR              PSP, R0     ; Load PSP with new
                                                             process SP
  111 0000009E F04E 0E04       ORR              LR, LR, #0x04 ; Ensure exceptio
                                                            n return uses proce
                                                            ss stack
  112 000000A2 B662            CPSIE            I
  113 000000A4 4770            BX               LR          ; Exception return 
                                                            will restore remain
                                                            ing context
  114 000000A6 BF00            NOP
  115 000000A8                 end
              E000ED22 
              00000000 
              E000ED04 
              00000000 
              00000000 



ARM Macro Assembler    Page 4 


              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\os_cpu_a.d -o.\objects\os_cpu_a.o -I.\RTE\_Target_1 -
I"D:\Keil5 MDK\keil\ARM\PACK\Keil\STM32F4xx_DFP\2.12.0\Drivers\CMSIS\Device\ST\
STM32F4xx\Include" -I"D:\Keil5 MDK\keil\ARM\CMSIS\Include" --predefine="__EVAL 
SETA 1" --predefine="__UVISION_VERSION SETA 525" --predefine="STM32F401xE SETA 
1" --list=.\listings\os_cpu_a.lst Port\os_cpu_a.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

My_Text 00000000

Symbol: My_Text
   Definitions
      At line 25 in file Port\os_cpu_a.asm
   Uses
      None
Comment: My_Text unused
OSCtxSw 00000032

Symbol: OSCtxSw
   Definitions
      At line 58 in file Port\os_cpu_a.asm
   Uses
      At line 11 in file Port\os_cpu_a.asm
Comment: OSCtxSw used once
OSIntCtxSw 00000040

Symbol: OSIntCtxSw
   Definitions
      At line 67 in file Port\os_cpu_a.asm
   Uses
      At line 12 in file Port\os_cpu_a.asm
Comment: OSIntCtxSw used once
OSStartHang 00000030

Symbol: OSStartHang
   Definitions
      At line 54 in file Port\os_cpu_a.asm
   Uses
      At line 55 in file Port\os_cpu_a.asm
Comment: OSStartHang used once
OSStartHighRdy 0000000E

Symbol: OSStartHighRdy
   Definitions
      At line 39 in file Port\os_cpu_a.asm
   Uses
      At line 10 in file Port\os_cpu_a.asm
Comment: OSStartHighRdy used once
OS_CPU_SR_Restore 00000008

Symbol: OS_CPU_SR_Restore
   Definitions
      At line 33 in file Port\os_cpu_a.asm
   Uses
      At line 14 in file Port\os_cpu_a.asm
Comment: OS_CPU_SR_Restore used once
OS_CPU_SR_Save 00000000

Symbol: OS_CPU_SR_Save
   Definitions
      At line 27 in file Port\os_cpu_a.asm
   Uses
      At line 13 in file Port\os_cpu_a.asm
Comment: OS_CPU_SR_Save used once
PendSV_Handler 00000050

Symbol: PendSV_Handler



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 77 in file Port\os_cpu_a.asm
   Uses
      At line 15 in file Port\os_cpu_a.asm
Comment: PendSV_Handler used once
PendSV_Handler_Nosave 0000006E

Symbol: PendSV_Handler_Nosave
   Definitions
      At line 90 in file Port\os_cpu_a.asm
   Uses
      At line 80 in file Port\os_cpu_a.asm
Comment: PendSV_Handler_Nosave used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 17 in file Port\os_cpu_a.asm
   Uses
      At line 49 in file Port\os_cpu_a.asm
      At line 60 in file Port\os_cpu_a.asm
      At line 69 in file Port\os_cpu_a.asm

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 21 in file Port\os_cpu_a.asm
   Uses
      At line 50 in file Port\os_cpu_a.asm
      At line 61 in file Port\os_cpu_a.asm
      At line 70 in file Port\os_cpu_a.asm

NVIC_PENDSV_PRI 000000F0

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 19 in file Port\os_cpu_a.asm
   Uses
      At line 41 in file Port\os_cpu_a.asm
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI2 E000ED22

Symbol: NVIC_SYSPRI2
   Definitions
      At line 18 in file Port\os_cpu_a.asm
   Uses
      At line 40 in file Port\os_cpu_a.asm
Comment: NVIC_SYSPRI2 used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

OSIntExit 00000000

Symbol: OSIntExit
   Definitions
      At line 7 in file Port\os_cpu_a.asm
   Uses
      None
Comment: OSIntExit unused
OSIntNesting 00000000

Symbol: OSIntNesting
   Definitions
      At line 6 in file Port\os_cpu_a.asm
   Uses
      None
Comment: OSIntNesting unused
OSPrioCur 00000000

Symbol: OSPrioCur
   Definitions
      At line 2 in file Port\os_cpu_a.asm
   Uses
      At line 95 in file Port\os_cpu_a.asm
Comment: OSPrioCur used once
OSPrioHighRdy 00000000

Symbol: OSPrioHighRdy
   Definitions
      At line 3 in file Port\os_cpu_a.asm
   Uses
      At line 96 in file Port\os_cpu_a.asm
Comment: OSPrioHighRdy used once
OSRunning 00000000

Symbol: OSRunning
   Definitions
      At line 1 in file Port\os_cpu_a.asm
   Uses
      At line 45 in file Port\os_cpu_a.asm
Comment: OSRunning used once
OSTCBCur 00000000

Symbol: OSTCBCur
   Definitions
      At line 4 in file Port\os_cpu_a.asm
   Uses
      At line 86 in file Port\os_cpu_a.asm
      At line 99 in file Port\os_cpu_a.asm

OSTCBHighRdy 00000000

Symbol: OSTCBHighRdy
   Definitions
      At line 5 in file Port\os_cpu_a.asm
   Uses
      At line 100 in file Port\os_cpu_a.asm
Comment: OSTCBHighRdy used once
OSTaskSwHook 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: OSTaskSwHook
   Definitions
      At line 8 in file Port\os_cpu_a.asm
   Uses
      At line 92 in file Port\os_cpu_a.asm
Comment: OSTaskSwHook used once
8 symbols
357 symbols in table
